name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly
    continue-on-error: ${{ matrix.rust == 'nightly' }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1.13.0
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy
    
    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2
    
    - name: Check formatting
      if: matrix.rust == 'stable'
      run: cargo fmt --all -- --check
    
    - name: Run clippy
      if: matrix.rust == 'stable'
      run: cargo clippy --all-targets --all-features -- -D warnings
    
    - name: Run unit tests
      run: cargo test --lib --verbose
    
    - name: Run integration tests
      run: cargo test --test "*" --verbose
    
    - name: Run all tests
      run: cargo test --verbose


  build:
    name: Build Check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1.13.0
      with:
        toolchain: stable
    
    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2
    
    - name: Build project
      run: cargo build --verbose
    
    - name: Build release
      run: cargo build --release --verbose

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1.13.0
      with:
        toolchain: stable
    
    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2
    
    - name: Install cargo-audit
      run: cargo install cargo-audit
    
    - name: Run security audit
      run: cargo audit

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1.13.0
      with:
        toolchain: stable
    
    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2
    
    - name: Build documentation
      run: cargo doc --no-deps --document-private-items
    
    - name: Check for broken intra-doc links
      run: cargo doc --no-deps --document-private-items --verbose